let serial;
let midi;
let gMajorChord = [67, 71, 74]; // MIDI note numbers for G major chord adjust if needed (We can also add more chords once this test works)

function setup() {
  createCanvas(400, 400);

  // Setup MIDI
  WebMidi.enable(function (err) {
    if (err) {
      console.log("WebMidi could not be enabled.", err);
    } else {
      console.log("WebMidi enabled!");

      // Retrieve an input by name, id, or index
      midi = WebMidi.inputs[0];

      if (midi) {
        console.log("Found MIDI input:", midi.name);
        midi.addListener('noteon', 'all',
          function (e) {
            console.log("Note On:", e.note.number);

            // Check if the played note is in the G major chord
            if (gMajorChord.includes(e.note.number)) {
              sendToArduino();
            }
          }
        );
      }
    }
  });

  // Setup serial communication to Arduino
  serial = new p5.SerialPort();
  serial.open('/dev/cu.yourArduinoPort'); // Be sure to change to your Arduino port
  serial.on('connected', serverConnected);
  serial.on('list', gotList);
  serial.on('data', gotData);
  serial.on('error', gotError);
  serial.on('open', gotOpen);
  serial.on('close', gotClose);
}

function draw() {
  background(220);
  // Just a sample, we can add more code for drawing if needed
}

function sendToArduino() {
  // Send a signal to Arduino when a G major chord note is played
  serial.write('GMajor\n');
}

// Serial communication callback functions
function serverConnected() {
  console.log('Connected to the server.');
}

function gotList(thelist) {
  console.log('List of Serial Ports:');
  // thelist is an array of their names
  for (let i = 0; i < thelist.length; i++) {
    console.log(i + ' ' + thelist[i]);
  }
}

function gotOpen() {
  console.log('Serial Port is Open');
}

function gotClose() {
  console.log('Serial Port is Closed');
}

function gotError(theerror) {
  console.log(theerror);
}

function gotData() {
  // Not used in this example, but you can use it to receive data from Arduino if needed
}
